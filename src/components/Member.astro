---
import { Image } from "astro:assets";
import { motion } from "framer-motion";

const categories = ["All", "Premium", "Athletic", "Lifestyle"];

const trainingServices = [
  {
    title: "Elite Transformation",
    style: "Strength & Conditioning",
    price: "$299/month",
    description:
      "Personalized 1-on-1 training program designed to transform your physique and performance",
    includes: [
      "Weekly 1-on-1 sessions",
      "Nutrition consultation",
      "Progress tracking",
      "24/7 coach support",
    ],
    category: "premium",
    featured: true,
    icon: "üí™",
  },
  {
    title: "Performance Plus",
    style: "Athletic Development",
    price: "$249/month",
    description:
      "Advanced training program for athletes looking to enhance their competitive edge",
    includes: [
      "Sport-specific training",
      "Performance analytics",
      "Recovery protocols",
      "Mobility work",
    ],
    category: "athletic",
    featured: false,
    icon: "üèÉ",
  },
  {
    title: "Body Architect",
    style: "Body Recomposition",
    price: "$199/month",
    description:
      "Scientific approach to building your ideal physique through targeted training",
    includes: [
      "Body composition analysis",
      "Custom workout plans",
      "Supplement guidance",
      "Bi-weekly check-ins",
    ],
    category: "premium",
    featured: false,
    icon: "‚ö°",
  },
  {
    title: "Lifestyle Fitness",
    style: "General Fitness",
    price: "$149/month",
    description:
      "Balanced approach to fitness for busy professionals seeking sustainable results",
    includes: [
      "Flexible workout schedules",
      "Lifestyle integration",
      "Stress management",
      "Monthly check-ins",
    ],
    category: "lifestyle",
    featured: false,
    icon: "üåü",
  },
];

const testimonials = [
  {
    name: "Sarah Johnson",
    role: "Marathon Runner",
    content:
      "The Athletic Development program transformed my running performance. I've never felt stronger!",
    image: "/api/placeholder/120/120",
  },
  {
    name: "Michael Chen",
    role: "Business Executive",
    content:
      "Executive Wellness fits perfectly into my busy schedule. The results speak for themselves.",
    image: "/api/placeholder/120/120",
  },
  {
    name: "Emma Davis",
    role: "Professional Athlete",
    content:
      "The Sports Mastery program took my game to the next level. Highly recommended!",
    image: "/api/placeholder/120/120",
  },
];

const { isInView } = Astro.props;
---

<section class="relative min-h-screen bg-black py-20 overflow-hidden">
  <div class="absolute inset-0">
    <div id="particles-js" class="absolute inset-0 opacity-30"></div>
    <div
      class="absolute inset-0 bg-gradient-to-br from-purple-900/20 via-black to-pink-900/20"
    >
    </div>
  </div>

  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
    <div class="text-center mb-20">
      <h1
        class="text-5xl md:text-7xl font-black mb-6 mt-6 tracking-tight perspective-text"
      >
        <span
          class="block bg-clip-text text-transparent bg-gradient-to-r from-purple-400 via-pink-500 to-purple-600 animate-gradient-x hover:scale-105 transition-transform duration-300"
        >
          Elevate Your Potential
        </span>
      </h1>

      <p
        class="text-gray-400 text-lg md:text-xl max-w-2xl mx-auto animate-fade-in-up"
      >
        Experience the next evolution in fitness training with our cutting-edge
        programs and expert coaching.
      </p>
    </div>

    <div class="flex justify-center gap-4 mb-12 category-filter">
      {
        categories.map((category) => (
          <button
            class="category-btn px-6 py-2 rounded-full text-sm font-medium transition-all duration-300 hover:bg-purple-500/20 hover:text-purple-300 hover:scale-105 focus:outline-none focus:ring-2 focus:ring-purple-500/50 text-gray-400 border border-purple-500/20"
            data-category={category.toLowerCase()}
          >
            {category}
          </button>
        ))
      }
    </div>

    <div
      class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 service-grid"
    >
      {
        trainingServices.map((service, index) => (
          <div
            class="service-card group"
            data-category={service.category}
            style={`--animation-delay: ${index * 100}ms`}
          >
            <div class="absolute -inset-0.5 bg-gradient-to-r from-purple-600 via-pink-500 to-purple-600 rounded-3xl opacity-20 group-hover:opacity-100 transition-all duration-500 blur animate-pulse-slow" />

            <div class="relative h-full bg-gray-900/90 backdrop-blur-sm rounded-3xl p-8 border border-purple-500/20 transform transition-all duration-300 group-hover:-translate-y-2">
              <div class="flex items-center justify-between mb-6">
                <span class="inline-block px-4 py-1 rounded-full bg-purple-500/10 border border-purple-500/20 text-purple-300 text-sm group-hover:bg-purple-500/20 transition-colors">
                  {service.style}
                </span>
                <span class="text-2xl transform group-hover:rotate-12 transition-transform duration-300">
                  {service.icon}
                </span>
              </div>

              <div class="mb-6">
                <h3 class="text-2xl font-bold text-white mb-2 group-hover:text-purple-300 transition-colors">
                  {service.title}
                </h3>
                <p class="text-3xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-pink-500 animate-gradient-x">
                  {service.price}
                </p>
              </div>

              <p class="text-gray-400 mb-8 group-hover:text-gray-300 transition-colors">
                {service.description}
              </p>

              <ul class="space-y-4 mb-8">
                {service.includes.map((feature) => (
                  <li class="flex items-start space-x-3 group/item">
                    <span class="w-1.5 h-1.5 bg-pink-500 rounded-full mt-2 group-hover/item:scale-150 transition-transform" />
                    <span class="text-gray-300 group-hover/item:text-purple-300 transition-colors">
                      {feature}
                    </span>
                  </li>
                ))}
              </ul>

              <div class="space-y-4">
                <button class="w-full py-4 bg-gradient-to-r from-purple-500 via-pink-500 to-purple-600 rounded-xl text-white font-semibold hover:opacity-90 transition-all duration-300 hover:scale-105 focus:ring-2 focus:ring-purple-500/50">
                  Start Your Journey
                </button>
                <button class="w-full py-4 border border-purple-500/30 rounded-xl text-white font-semibold hover:bg-purple-500/10 transition-all duration-300 hover:scale-105">
                  Learn More
                </button>
              </div>
            </div>
          </div>
        ))
      }
    </div>

    <div class="mt-32 testimonials-section">
      <h2
        class="text-3xl md:text-4xl font-bold text-center mb-16 bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-pink-500 animate-gradient-x"
      >
        Success Stories
      </h2>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        {
          testimonials.map((testimonial, index) => (
            <div
              class="testimonial-card group"
              style={`--animation-delay: ${index * 200}ms`}
            >
              <div class="absolute -inset-0.5 bg-gradient-to-r from-purple-600 to-pink-600 rounded-3xl opacity-20 group-hover:opacity-100 transition-all duration-500 blur" />
              <div class="relative bg-gray-900/90 backdrop-blur-sm rounded-3xl p-8 border border-purple-500/20 transform transition-all duration-300 group-hover:-translate-y-2">
                <div class="flex items-center mb-6">
                  <div class="relative w-12 h-12 rounded-full overflow-hidden mr-4 group-hover:scale-110 transition-transform duration-300">
                    <Image
                      src={testimonial.image}
                      alt={testimonial.name}
                      width={48}
                      height={48}
                      class="object-cover"
                    />
                  </div>
                  <div>
                    <h4 class="text-white font-semibold group-hover:text-purple-300 transition-colors">
                      {testimonial.name}
                    </h4>
                    <p class="text-gray-400 text-sm">{testimonial.role}</p>
                  </div>
                </div>
                <p class="text-gray-300 group-hover:text-white transition-colors">
                  {testimonial.content}
                </p>
              </div>
            </div>
          ))
        }
      </div>
    </div>

    <div class="text-center mt-32 cta-section">
      <p class="text-gray-400 mb-6 text-lg animate-fade-in-up">
        Ready to begin your transformation?
      </p>
      <div class="flex flex-col sm:flex-row gap-4 justify-center">
        <a
          href="#consultation"
          class="group inline-flex items-center justify-center space-x-2 px-8 py-4 bg-gradient-to-r from-purple-500 via-pink-500 to-purple-600 rounded-full text-white font-semibold hover:opacity-90 transition-all duration-300 hover:scale-105 focus:ring-2 focus:ring-purple-500/50"
        >
          <span>Book Free Consultation</span>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-5 w-5 transform group-hover:translate-x-1 transition-transform"
            viewBox="0 0 20 20"
            fill="currentColor"
          >
            <path
              fill-rule="evenodd"
              d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z"
              clip-rule="evenodd"></path>
          </svg>
        </a>
        <a
          href="#programs"
          class="group inline-flex items-center justify-center space-x-2 px-8 py-4 border border-purple-500/30 rounded-full text-white font-semibold hover:bg-purple-500/10 transition-all duration-300 hover:scale-105"
        >
          <span>Explore Programs</span>
        </a>
      </div>
    </div>
  </div>
</section>

<style>
  @keyframes float {
    0% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
    100% {
      transform: translateY(0px);
    }
  }

  @keyframes gradient-shift {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  @keyframes pulse-slow {
    0%,
    100% {
      opacity: 0.2;
    }
    50% {
      opacity: 0.3;
    }
  }

  @keyframes fade-in-up {
    0% {
      opacity: 0;
      transform: translateY(20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-float {
    animation: float 3s ease-in-out infinite;
  }

  .animate-gradient-x {
    background-size: 200% 200%;
    animation: gradient-shift 15s ease infinite;
  }

  .animate-pulse-slow {
    animation: pulse-slow 4s ease-in-out infinite;
  }

  .animate-fade-in-up {
    animation: fade-in-up 0.6s ease-out forwards;
  }

  .perspective-text {
    transform-style: preserve-3d;
    perspective: 1000px;
  }

  .perspective-text span {
    display: inline-block;
    transition: transform 0.3s ease;
  }

  .perspective-text:hover span {
    transform: rotateX(10deg) rotateY(-10deg);
  }

  .service-card,
  .testimonial-card {
    opacity: 0;
    transform: translateY(20px);
    animation: fade-in-up 0.6s ease-out forwards;
    animation-delay: var(--animation-delay);
  }

  html {
    scroll-behavior: smooth;
  }

  .category-btn.active {
    background-color: rgba(168, 85, 247, 0.2);
    color: rgb(216, 180, 254);
    transform: scale(1.05);
  }

  .service-grid {
    transition: opacity 0.3s ease;
  }

  .service-grid.filtering {
    opacity: 0.5;
  }
</style>

<script>
  import "particles.js";

  document.addEventListener("astro:page-load", () => {
    particlesJS("particles-js", {
      particles: {
        number: { value: 80, density: { enable: true, value_area: 800 } },
        color: { value: "#ffffff" },
        shape: { type: "circle" },
        opacity: {
          value: 0.5,
          random: false,
          animation: { enable: true, speed: 1, opacity_min: 0.1, sync: false },
        },
        size: {
          value: 3,
          random: true,
          animation: { enable: true, speed: 2, size_min: 0.1, sync: false },
        },
        line_linked: {
          enable: true,
          distance: 150,
          color: "#ffffff",
          opacity: 0.4,
          width: 1,
        },
        move: {
          enable: true,
          speed: 1,
          direction: "none",
          random: false,
          straight: false,
          out_mode: "out",
          bounce: false,
        },
      },
      interactivity: {
        detect_on: "canvas",
        events: {
          onhover: { enable: true, mode: "repulse" },
          onclick: { enable: true, mode: "push" },
          resize: true,
        },
        modes: {
          repulse: { distance: 100, duration: 0.4 },
          push: { particles_nb: 4 },
        },
      },
      retina_detect: true,
    });

    const categoryButtons = document.querySelectorAll(".category-btn");
    const serviceCards = document.querySelectorAll(".service-card");

    categoryButtons.forEach((button) => {
      button.addEventListener("click", () => {
        const category = button.getAttribute("data-category").toLowerCase();

        categoryButtons.forEach((btn) => btn.classList.remove("active"));
        button.classList.add("active");

        const serviceGrid = document.querySelector(".service-grid");
        serviceGrid.classList.add("filtering");

        setTimeout(() => {
          serviceCards.forEach((card) => {
            const cardCategory = card
              .getAttribute("data-category")
              .toLowerCase();
            if (category === "all" || cardCategory === category) {
              card.style.display = "block";
              setTimeout(() => {
                card.style.opacity = "1";
                card.style.transform = "translateY(0)";
              }, 50);
            } else {
              card.style.display = "none";
              card.style.opacity = "0";
              card.style.transform = "translateY(20px)";
            }
          });
          serviceGrid.classList.remove("filtering");
        }, 300);
      });
    });

    const observerOptions = {
      root: null,
      rootMargin: "0px",
      threshold: 0.1,
    };

    const observerCallback = (entries, observer) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add("is-visible");
          observer.unobserve(entry.target);
        }
      });
    };

    const observer = new IntersectionObserver(
      observerCallback,
      observerOptions
    );

    document
      .querySelectorAll(".service-card, .testimonial-card")
      .forEach((card) => {
        observer.observe(card);
      });

    const smoothScroll = (target) => {
      document.querySelector(target).scrollIntoView({
        behavior: "smooth",
        block: "start",
      });
    };

    document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
      anchor.addEventListener("click", (e) => {
        e.preventDefault();
        smoothScroll(anchor.getAttribute("href"));
      });
    });
  });
</script>
